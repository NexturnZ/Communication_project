function BER = runSDRuQPSKReceiver(prmQPSKReceiver)

%   Copyright 2012-2016 The MathWorks, Inc.

%#codegen
persistent hRx radio
if isempty(hRx)
    hRx = sdruQPSKRx( ...
        'DesiredAmplitude',               1/sqrt(prmQPSKReceiver.Upsampling), ...
        'ModulationOrder',                prmQPSKReceiver.M, ...
        'DownsamplingFactor',             prmQPSKReceiver.Downsampling, ...
        'CoarseCompFrequencyResolution',	prmQPSKReceiver.CoarseCompFrequencyResolution, ...
        'PhaseRecoveryLoopBandwidth',     prmQPSKReceiver.PhaseRecoveryLoopBandwidth, ...
        'PhaseRecoveryDampingFactor',     prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'TimingRecoveryLoopBandwidth',    prmQPSKReceiver.TimingRecoveryLoopBandwidth, ...
        'TimingRecoveryDampingFactor',    prmQPSKReceiver.PhaseRecoveryDampingFactor, ...
        'PostFilterOversampling',         prmQPSKReceiver.Upsampling/prmQPSKReceiver.Downsampling, ...
        'PhaseErrorDetectorGain',         prmQPSKReceiver.PhaseErrorDetectorGain, ...
        'PhaseRecoveryGain',              prmQPSKReceiver.PhaseRecoveryGain, ...
        'TimingErrorDetectorGain',        prmQPSKReceiver.TimingErrorDetectorGain, ...
        'TimingRecoveryGain',             prmQPSKReceiver.TimingRecoveryGain, ...
        'FrameSize',                      prmQPSKReceiver.FrameSize, ...
        'BarkerLength',                   prmQPSKReceiver.BarkerLength, ...
        'MessageLength',                  prmQPSKReceiver.MessageLength, ...
        'SampleRate',                     prmQPSKReceiver.Fs, ...
        'DataLength',                     prmQPSKReceiver.DataLength, ...
        'ReceiverFilterCoefficients',     prmQPSKReceiver.ReceiverFilterCoefficients, ...
        'DescramblerBase',                prmQPSKReceiver.ScramblerBase, ...
        'DescramblerPolynomial',          prmQPSKReceiver.ScramblerPolynomial, ...
        'DescramblerInitialConditions',   prmQPSKReceiver.ScramblerInitialConditions,...
        'PrintOption',                    true);

  % Create and configure the SDRu System object. Set the SerialNum for B2xx
  % radios and IPAddress for X3xx, N2xx, and USRP2 radios. MasterClockRate
  % is not configurable for N2xx and USRP2 radios.
  switch prmQPSKReceiver.Platform
    case {'B200','B210'}
      radio = comm.SDRuReceiver(...
        'Platform',             prmQPSKReceiver.Platform, ...
        'SerialNum',            prmQPSKReceiver.Address, ...
        'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
        'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
        'Gain',                 prmQPSKReceiver.USRPGain, ...
        'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
        'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
        'OutputDataType',       'double');
    case {'X300','X310'}
      radio = comm.SDRuReceiver(...
        'Platform',             prmQPSKReceiver.Platform, ...
        'IPAddress',            prmQPSKReceiver.Address, ...
        'MasterClockRate',      prmQPSKReceiver.MasterClockRate, ...
        'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
        'Gain',                 prmQPSKReceiver.USRPGain, ...
        'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
        'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
        'OutputDataType',       'double');
    case {'N200/N210/USRP2'}
      radio = comm.SDRuReceiver(...
        'Platform',             prmQPSKReceiver.Platform, ...
        'IPAddress',            prmQPSKReceiver.Address, ...
        'CenterFrequency',      prmQPSKReceiver.USRPCenterFrequency, ...
        'Gain',                 prmQPSKReceiver.USRPGain, ...
        'DecimationFactor',     prmQPSKReceiver.USRPDecimationFactor, ...
        'SamplesPerFrame',      prmQPSKReceiver.USRPFrameLength, ...
        'OutputDataType',       'double');
  end
end

% Initialize variables
currentTime = 0;
len = uint32(0);
BER = NaN;
corruptSignal = complex(zeros(4000,1));

while currentTime <  prmQPSKReceiver.StopTime
    % Keep accessing the SDRu System object output until it is valid
    while len <= 0
        [corruptSignal, len] = step(radio);
    end
    % When the SDRu System object output is valid, decode the received
    % message
    if len > 0
        BER= step(hRx, corruptSignal);
    end
    % Update simulation time
    currentTime = currentTime + prmQPSKReceiver.FrameTime;
    len=uint32(0);
end

release(hRx);
release(radio);



