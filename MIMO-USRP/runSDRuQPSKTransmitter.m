function runSDRuQPSKTransmitter(prmQPSKTransmitter)
%#codegen

%   Copyright 2012-2014 The MathWorks, Inc.

persistent hTx radio
if isempty(hTx)
  % Initialize the components
  % Create and configure the transmitter System object
  hTx = QPSKTransmitter(...
    'UpsamplingFactor', prmQPSKTransmitter.Upsampling, ...
    'MessageLength', prmQPSKTransmitter.MessageLength, ...
    'TransmitterFilterCoefficients',prmQPSKTransmitter.TransmitterFilterCoefficients, ...
    'DataLength', prmQPSKTransmitter.DataLength, ...
    'ScramblerBase', prmQPSKTransmitter.ScramblerBase, ...
    'ScramblerPolynomial', prmQPSKTransmitter.ScramblerPolynomial, ...
    'ScramblerInitialConditions', prmQPSKTransmitter.ScramblerInitialConditions);
  
  % Create and configure the SDRu System object. Set the SerialNum for B2xx
  % radios and IPAddress for X3xx, N2xx, and USRP2 radios. MasterClockRate
  % is not configurable for N2xx and USRP2 radios.
  switch prmQPSKTransmitter.Platform
    case {'B200','B210'}
      radio = comm.SDRuTransmitter(...
        'Platform',             prmQPSKTransmitter.Platform, ...
        'SerialNum',            prmQPSKTransmitter.Address, ...
        'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
        'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
        'Gain',                 prmQPSKTransmitter.USRPGain, ...
        'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
    case {'X300','X310'}
      radio = comm.SDRuTransmitter(...
        'Platform',             prmQPSKTransmitter.Platform, ...
        'IPAddress',            prmQPSKTransmitter.Address, ...
        'MasterClockRate',      prmQPSKTransmitter.MasterClockRate, ...
        'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
        'Gain',                 prmQPSKTransmitter.USRPGain, ...
        'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor);
    case {'N200/N210/USRP2'}
      radio = comm.SDRuTransmitter(...
        'Platform',             prmQPSKTransmitter.Platform, ...
        'IPAddress',            prmQPSKTransmitter.Address, ...
        'CenterFrequency',      prmQPSKTransmitter.USRPCenterFrequency, ...
        'Gain',                 prmQPSKTransmitter.USRPGain, ...
        'InterpolationFactor',  prmQPSKTransmitter.USRPInterpolationFactor,...
        'ChannelMapping', [1 2] );
  end
  radio.Gain=[prmQPSKTransmitter.USRPGain, prmQPSKTransmitter.USRPGain];
  
info(radio)
  currentTime = 0;
  
  %Transmission Process
  while currentTime < prmQPSKTransmitter.StopTime
    % Bit generation, modulation and transmission filtering
    data = step(hTx);
    % Data transmission
    step(radio, [data, data]);
    % Update simulation time
    currentTime=currentTime+prmQPSKTransmitter.FrameTime;
  end
  
  release(hTx);
  release(radio);
end